import java.util.Collections;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.Scanner;

public class real {
    private static class DiaryEntry {
        private String title;
        private String content;
        private LocalDate date;

        public DiaryEntry(String title, String content, LocalDate date) {
            this.title = title;
            this.content = content;
            this.date = date;
        }

        public String getTitle() {
            return title;
        }

        public LocalDate getDate() {
            return date;
        }

//        @Override
        public String toString() {
            return "Title: " + title + "\nDate: " + date + "\nContent: " + content;
        }
    }

    private static List<DiaryEntry> entries = new ArrayList<>();

    public static void addEntry(String title, String content, LocalDate date) {
        entries.add(new DiaryEntry(title, content, date));
    }

   public static List<DiaryEntry> searchByTitle(String title) {
    List<DiaryEntry> result = new ArrayList<>();
    for (DiaryEntry entry : entries) {
        if (entry.getTitle().equalsIgnoreCase(title)) {
            result.add(entry);
        }
    }
    return result;
}

public static List<DiaryEntry> searchByDate(LocalDate date) {
    List<DiaryEntry> result = new ArrayList<>();
    for (DiaryEntry entry : entries) {
        if (entry.getDate().equals(date)) {
            result.add(entry);
        }
    }
    return result;
}

public static void sortByDate() {
    Collections.sort(entries, new Comparator<DiaryEntry>() {
        @Override
        public int compare(DiaryEntry d1, DiaryEntry d2) {
            return d1.getDate().compareTo(d2.getDate());
        }
    });
}

public static void sortByTitle() {
    Collections.sort(entries, new Comparator<DiaryEntry>() {
        @Override
        public int compare(DiaryEntry d1, DiaryEntry d2) {
            return d1.getTitle().compareToIgnoreCase(d2.getTitle());
        }
    });
} 

    public static void viewAllEntries() {
        entries.forEach(System.out::println);
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("\n1. Add Diary Entry");
            System.out.println("2. Search Diary by Title");
            System.out.println("3. Search Diary by Date");
            System.out.println("4. Sort Diary by Date");
            System.out.println("5. Sort Diary by Title");
            System.out.println("6. View All Entries");
            System.out.println("7. Exit");

            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1 :
                    System.out.print("Enter title: ");
                    String title = scanner.nextLine();
                    System.out.print("Enter content: ");
                    String content = scanner.nextLine();

                    System.out.print("Do you want to use today's date? (yes/no): ");
                    String useToday = scanner.nextLine().trim().toLowerCase();
                    LocalDate date = useToday.equals("yes") ? LocalDate.now() : LocalDate.parse(scanner.nextLine());
                    
                    addEntry(title, content, date);
                    System.out.println("Diary entry added for date: " + date);
                
                case 2 :
                    System.out.print("Enter title to search: ");
                    String searchTitle = scanner.nextLine();
                    List<DiaryEntry> titleResults = searchByTitle(searchTitle);
                    if (titleResults.isEmpty()) {
                        System.out.println("No entries found with that title.");
                    } else {
                        titleResults.forEach(System.out::println);
                    }
                
                case 3 :
                    System.out.print("Enter date to search (YYYY-MM-DD): ");
                    LocalDate searchDate = LocalDate.parse(scanner.nextLine());
                    List<DiaryEntry> dateResults = searchByDate(searchDate);
                    if (dateResults.isEmpty()) {
                        System.out.println("No entries found for that date.");
                    } else {
                        dateResults.forEach(System.out::println);
                        }
                
                case 4 :
                    sortByDate();
                    System.out.println("Diary entries sorted by date.");
                
                case 5 :
                    sortByTitle();
                    System.out.println("Diary entries sorted by title.");
                
                case 6 :
                    System.out.println("All Diary Entries:");
                    viewAllEntries();
                
                case 7 :
                    System.out.println("Goodbye!");
                    scanner.close();
                    return;
                
                default :
                    System.out.println("Invalid choice. Try again.");
            }
        }
    }
}
